
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "pyvista/examples/damavand.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_pyvista_examples_damavand.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_pyvista_examples_damavand.py:


Damavand Volcano
~~~~~~~~~~~~~~~~

Visualize 3D models of Damavand Volcano, Alborz, Iran.

This is an adaption of `Alexey Pechnikov <https://orcid.org/0000-0001-9626-8615>`_ and `A.V.Durandin <https://orcid.org/0000-0001-6468-9757>`_'s `ParaView-MoshaFault <https://github.com/mobigroup/ParaView-MoshaFault>`_.

See LinkedIn posts for more details:

- `The slices of the 3D model of the density on the Mosha fault area, North Iran <https://www.linkedin.com/posts/activity-6610080454911631360-97-V/>`_

- `Comparing Magnetic and Gravity Data to the Mosha Fault Area <https://www.linkedin.com/posts/activity-6609736436344201216-Kxls/>`_

- `North Iran, Mosha fault <https://www.linkedin.com/posts/activity-6609681862937853952-2BPG/>`_

- `North Iran <https://www.linkedin.com/posts/activity-6609486793676996608-ZF-J/>`_


Originally posted: https://github.com/banesullivan/damavand-volcano

.. GENERATED FROM PYTHON SOURCE LINES 22-28

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 6
    import numpy as np
    import pooch
    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 29-39

.. code-block:: default

    base_url = r"https://raw.githubusercontent.com/pyvista/vtk-data/master/Data/{}"
    a = pooch.retrieve(url=base_url.format("gebco7510_49cl.stl"), known_hash=None)
    b = pooch.retrieve(url=base_url.format("gebco7510_55cl.stl"), known_hash=None)
    c = pooch.retrieve(url=base_url.format("AOI.Damavand.32639.vtp"), known_hash=None)

    gebco = examples.download_damavand_volcano()
    gebco_a = pv.read(a)
    gebco_b = pv.read(b)
    aoi = pv.read(c)








.. GENERATED FROM PYTHON SOURCE LINES 40-53

.. code-block:: default

    opacity = [0, 0.75, 0, 0.75, 1.0]
    clim = [0, 100]

    p = pv.Plotter()
    p.add_volume(
        gebco,
        cmap="magma",
        clim=clim,
        opacity=opacity,
        opacity_unit_distance=6000,
    )
    p.show()




.. image-sg:: /pyvista/examples/images/sphx_glr_damavand_001.png
   :alt: damavand
   :srcset: /pyvista/examples/images/sphx_glr_damavand_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 54-61

.. code-block:: default

    voi = gebco.extract_subset([175, 200, 105, 132, 98, 170])

    p = pv.Plotter()
    p.add_mesh(gebco.outline(), color="k")
    p.add_mesh(voi, cmap="magma")
    p.show()




.. image-sg:: /pyvista/examples/images/sphx_glr_damavand_002.png
   :alt: damavand
   :srcset: /pyvista/examples/images/sphx_glr_damavand_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 62-71

.. code-block:: default

    p = pv.Plotter()
    p.add_volume(voi, cmap="magma", clim=clim, opacity=opacity, opacity_unit_distance=2000)
    p.camera_position = [
        (531554.5542909054, 3944331.800171338, 26563.04809259223),
        (599088.1433822059, 3982089.287834022, -11965.14728669936),
        (0.3738545892415734, 0.244312810377319, 0.8947312427698892),
    ]
    p.show()




.. image-sg:: /pyvista/examples/images/sphx_glr_damavand_003.png
   :alt: damavand
   :srcset: /pyvista/examples/images/sphx_glr_damavand_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 72-75

.. code-block:: default

    contours = voi.contour(np.arange(5, 55, 5))
    contours






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table style='width: 100%;'>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>49181</td></tr>
    <tr><td>N Points</td><td>25586</td></tr>
    <tr><td>N Strips</td><td>0</td></tr>
    <tr><td>X Bounds</td><td>5.880e+05, 6.130e+05</td></tr>
    <tr><td>Y Bounds</td><td>3.969e+06, 3.996e+06</td></tr>
    <tr><td>Z Bounds</td><td>-2.015e+04, 4.949e+03</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table style='width: 100%;'>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>data</b></td><td>Points</td><td>float32</td><td>1</td><td>5.000e+00</td><td>5.000e+01</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 76-78

.. code-block:: default

    contours.plot(cmap="nipy_spectral", opacity=0.15)




.. image-sg:: /pyvista/examples/images/sphx_glr_damavand_004.png
   :alt: damavand
   :srcset: /pyvista/examples/images/sphx_glr_damavand_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 79-83

.. code-block:: default

    roi = [*voi.bounds[0:4], *aoi.bounds[4:6]]
    aoi_clipped = aoi.clip_box(roi, invert=False)
    pv.plot([aoi, pv.Box(roi).outline()], cpos="xy")




.. image-sg:: /pyvista/examples/images/sphx_glr_damavand_005.png
   :alt: damavand
   :srcset: /pyvista/examples/images/sphx_glr_damavand_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 84-102

.. code-block:: default

    p = pv.Plotter(window_size=np.array([1024, 768]) * 2)

    # Add all the data we want to see
    p.add_mesh(contours, cmap="nipy_spectral", opacity=0.15)
    p.add_mesh(gebco_a, color="#ff0000")
    p.add_mesh(gebco_b, color="#ff0000")
    p.add_mesh(aoi_clipped, cmap="coolwarm", opacity=0.7)

    # Add a title
    p.add_text("Vent and Magma Chambers\nDamavand Volcano, Alborz")

    # A nice perspective
    p.camera_position = [
        (544065.5831913119, 3924518.576093113, 24324.3096344195),
        (597885.1732914157, 3982998.0900773173, -12587.537450058662),
        (0.33162714740718435, 0.26609487244915314, 0.9051060456978746),
    ]
    p.show()



.. image-sg:: /pyvista/examples/images/sphx_glr_damavand_006.png
   :alt: damavand
   :srcset: /pyvista/examples/images/sphx_glr_damavand_006.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 23.204 seconds)


.. _sphx_glr_download_pyvista_examples_damavand.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: damavand.py <damavand.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: damavand.ipynb <damavand.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
