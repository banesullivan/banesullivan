
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "pyvista/examples/raster.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_pyvista_examples_raster.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_pyvista_examples_raster.py:


Read a raster using xarray
~~~~~~~~~~~~~~~~~~~~~~~~~~

Use xarray and rasterio to load a raster into a StructuredGrid.

.. GENERATED FROM PYTHON SOURCE LINES 7-14

.. code-block:: default


    import numpy as np
    import pooch
    import pyvista as pv
    from rasterio.warp import transform
    import rioxarray








.. GENERATED FROM PYTHON SOURCE LINES 15-17

The following is a function you can use to load just about any geospatial
raster.

.. GENERATED FROM PYTHON SOURCE LINES 17-49

.. code-block:: default



    def read_raster(filename, out_crs="EPSG:3857", use_z=False):
        """Read a raster to a ``pyvista.StructuredGrid``.

        This will handle coordinate transformations.
        """
        # Read in the data
        data = rioxarray.open_rasterio(filename)
        values = np.asarray(data)
        data.rio.nodata
        nans = values == data.rio.nodata
        if np.any(nans):
            # values = np.ma.masked_where(nans, values)
            values[nans] = np.nan
        # Make a mesh
        xx, yy = np.meshgrid(data["x"], data["y"])
        if use_z and values.shape[0] == 1:
            # will make z-comp the values in the file
            zz = values.reshape(xx.shape)
        else:
            # or this will make it flat
            zz = np.zeros_like(xx)
        mesh = pv.StructuredGrid(xx, yy, zz)
        pts = mesh.points
        lon, lat = transform(data.rio.crs, out_crs, pts[:, 0], pts[:, 1])
        mesh.points[:, 0] = lon
        mesh.points[:, 1] = lat
        mesh["data"] = values.reshape(mesh.n_points, -1, order="F")
        return mesh









.. GENERATED FROM PYTHON SOURCE LINES 50-51

Download a sample GeoTiff to demonstrate

.. GENERATED FROM PYTHON SOURCE LINES 51-54

.. code-block:: default

    url = "https://raw.githubusercontent.com/pyvista/vtk-data/master/Data/Elevation.tif"
    file_path = pooch.retrieve(url=url, known_hash=None)








.. GENERATED FROM PYTHON SOURCE LINES 55-56

Use the utility function to load that file.

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default

    topo = read_raster(file_path, use_z=True)
    topo






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table>
    <tr><th>StructuredGrid</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>8126580</td></tr>
    <tr><td>N Points</td><td>8132409</td></tr>
    <tr><td>X Bounds</td><td>-1.193e+07, -1.189e+07</td></tr>
    <tr><td>Y Bounds</td><td>4.702e+06, 4.732e+06</td></tr>
    <tr><td>Z Bounds</td><td>2.360e+03, 4.346e+03</td></tr>
    <tr><td>Dimensions</td><td>2311, 3519, 1</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>data</b></td><td>Points</td><td>float32</td><td>1</td><td>2.360e+03</td><td>4.346e+03</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 60-61

.. code-block:: default

    topo.plot()



.. image-sg:: /pyvista/examples/images/sphx_glr_raster_001.png
   :alt: raster
   :srcset: /pyvista/examples/images/sphx_glr_raster_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  15.798 seconds)


.. _sphx_glr_download_pyvista_examples_raster.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: raster.py <raster.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: raster.ipynb <raster.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
