name: Build
on:
  workflow_dispatch:
  push:
    tags: "*"
    branches:
      - main
  pull_request:

env:
  SHELLOPTS: 'errexit:pipefail'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  doc:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v1
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: PyVista Report
        run: python -c "import pyvista;print(pyvista.Report())"
      - name: Cache PyVista Sphinx-Gallery Examples
        uses: actions/cache@v2
        with:
          path: site/pyvista/examples/
          key: pyvista-examples-${{ hashFiles('requirements.txt') }}-${{ hashFiles('Dockerfile') }}
      - name: Build Site
        working-directory: site
        run: make html
      - name: Get Notebooks
        run: |
          mkdir notebooks
          cp site/pyvista/examples/*.ipynb notebooks/
      - uses: actions/upload-artifact@v2
        with:
          name: docs-build
          path: site/_build/html
      - uses: actions/upload-artifact@v2
        with:
          name: notebooks
          path: notebooks

  deploy:
    name: Publish Documentation
    runs-on: ubuntu-latest
    needs: doc
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: docs-build
          path: site/_build/html
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site/_build/html
          cname: banesullivan.com

  docker:
    name: Build Docker Image with Notebooks
    needs: doc
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' ||
        ( github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository )
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: notebooks
          path: notebooks
      - name: Log into the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: token
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for the Jupyter Docker image
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push the Jupyter Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: ${{ github.actor != 'dependabot[bot]' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
